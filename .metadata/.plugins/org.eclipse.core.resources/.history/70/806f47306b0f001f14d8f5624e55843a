package com.techlabs.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.techlabs.model.User;

public class UserDAO {
    private String jdbcURL = "jdbc:mysql://localhost:3306/bankdb?useSSL=false";
    private String jdbcUsername = "root";
    private String jdbcPassword = "niket123";
    
    
    private static final String INSERT_USERS_SQL = "INSERT INTO users" + "  (fname, lname, email, password) VALUES " +
            " (?, ?, ?, ?);";

        private static final String SELECT_USER_BY_ID = "select id,fname,lname,email from users where id =?;";
        private static final String SELECT_ALL_USERS = "select * from users";
        private static final String DELETE_USERS_SQL = "delete from users where id = ?;";
        private static final String UPDATE_USERS_SQL = "update users set fname = ?,lname = ?,email= ?, password=c? where id = ?;";

        public UserDAO() {}

        protected Connection getConnection() {
            Connection connection = null;
            try {
                Class.forName("com.mysql.jdbc.Driver");
                connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
            } catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            return connection;
        }
        
        public void insertUser(User user) throws SQLException {
            System.out.println(INSERT_USERS_SQL);
            // try-with-resource statement will auto close the connection.
            try (Connection connection = getConnection(); PreparedStatement preparedStatement = connection.prepareStatement(INSERT_USERS_SQL)) {
                preparedStatement.setString(1, user.getFname());
                preparedStatement.setString(2, user.getLname());
                preparedStatement.setString(3, user.getEmail());
                preparedStatement.setString(4, user.getPassword());
                System.out.println(preparedStatement);
                preparedStatement.executeUpdate();
            } catch (SQLException e) {
                printSQLException(e);
            }
        }
        
        public User selectUser(int id) {
            User user = null;
            // Step 1: Establishing a Connection
            try (Connection connection = getConnection();
                // Step 2:Create a statement using connection object
                PreparedStatement preparedStatement = connection.prepareStatement(SELECT_USER_BY_ID);) {
                preparedStatement.setInt(1, id);
                System.out.println(preparedStatement);
                // Step 3: Execute the query or update query
                ResultSet rs = preparedStatement.executeQuery();

                // Step 4: Process the ResultSet object.
                while (rs.next()) {
                    String name = rs.getString("name");
                    String email = rs.getString("email");
                    String country = rs.getString("country");
                    user = new User(id, name, email, country);
                }
            } catch (SQLException e) {
                printSQLException(e);
            }
            return user;
        }
        
        




}
